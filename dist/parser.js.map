{"version":3,"file":"parser.js","names":["path","EventEmitter","HandlebarsLexer","HTMLLexer","JavascriptLexer","JsxLexer","VueLexer","PhpLexer","lexers","hbs","handlebars","htm","html","mjs","js","ts","jsx","tsx","vue","php","lexersMap","Parser","_EventEmitter","_inherits","_super","_createSuper","_this","options","arguments","length","undefined","_classCallCheck","call","_objectSpread","_createClass","key","value","parse","content","filename","_this2","keys","extension","extname","substr","_iterator","_createForOfIteratorHelper","_step","s","n","done","lexerConfig","lexerName","lexerOptions","lexer","Lexer","emit","Error","concat","on","warning","extract","err","e","f","default"],"sources":["../src/parser.js"],"sourcesContent":["import path from 'path'\r\nimport EventEmitter from 'events'\r\nimport HandlebarsLexer from './lexers/handlebars-lexer.js'\r\nimport HTMLLexer from './lexers/html-lexer.js'\r\nimport JavascriptLexer from './lexers/javascript-lexer.js'\r\nimport JsxLexer from './lexers/jsx-lexer.js'\r\nimport VueLexer from './lexers/vue-lexer.js'\r\nimport PhpLexer from './lexers/php-lexer.js'\r\n\r\nconst lexers = {\r\n  hbs: ['HandlebarsLexer'],\r\n  handlebars: ['HandlebarsLexer'],\r\n\r\n  htm: ['HTMLLexer'],\r\n  html: ['HTMLLexer'],\r\n\r\n  mjs: ['JavascriptLexer'],\r\n  js: ['JavascriptLexer'],\r\n  ts: ['JavascriptLexer'],\r\n  jsx: ['JsxLexer'],\r\n  tsx: ['JsxLexer'],\r\n\r\n  vue: ['VueLexer'],\r\n\r\n  php: ['PhpLexer'],\r\n\r\n  default: ['JavascriptLexer'],\r\n}\r\n\r\nconst lexersMap = {\r\n  HandlebarsLexer,\r\n  HTMLLexer,\r\n  JavascriptLexer,\r\n  JsxLexer,\r\n  VueLexer,\r\n  PhpLexer,\r\n}\r\n\r\nexport default class Parser extends EventEmitter {\r\n  constructor(options = {}) {\r\n    super(options)\r\n    this.options = options\r\n    this.lexers = { ...lexers, ...options.lexers }\r\n  }\r\n\r\n  parse(content, filename) {\r\n    let keys = []\r\n    const extension = path.extname(filename).substr(1)\r\n    const lexers = this.lexers[extension] || this.lexers.default\r\n\r\n    for (const lexerConfig of lexers) {\r\n      let lexerName\r\n      let lexerOptions\r\n\r\n      if (\r\n        typeof lexerConfig === 'string' ||\r\n        typeof lexerConfig === 'function'\r\n      ) {\r\n        lexerName = lexerConfig\r\n        lexerOptions = {}\r\n      } else {\r\n        lexerName = lexerConfig.lexer\r\n        lexerOptions = lexerConfig\r\n      }\r\n\r\n      let Lexer\r\n      if (typeof lexerName === 'function') {\r\n        Lexer = lexerName\r\n      } else {\r\n        if (!lexersMap[lexerName]) {\r\n          this.emit('error', new Error(`Lexer '${lexerName}' does not exist`))\r\n        }\r\n\r\n        Lexer = lexersMap[lexerName]\r\n      }\r\n\r\n      const lexer = new Lexer(lexerOptions)\r\n      lexer.on('warning', (warning) => this.emit('warning', warning))\r\n      keys = keys.concat(lexer.extract(content, filename))\r\n    }\r\n\r\n    return keys\r\n  }\r\n}\r\n"],"mappings":"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"}