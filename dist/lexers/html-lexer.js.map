{"version":3,"file":"html-lexer.js","names":["BaseLexer","cheerio","HTMLLexer","_BaseLexer","_inherits","_super","_createSuper","_this","options","arguments","length","undefined","_classCallCheck","call","attr","optionAttr","_createClass","key","value","extract","content","_this2","that","$","load","concat","each","index","node","$node","keys","attribs","split","JSON","parse","_iterator","_createForOfIteratorHelper","_step","s","n","done","replace","text","push","_objectSpread","err","e","f","default"],"sources":["../../src/lexers/html-lexer.js"],"sourcesContent":["import BaseLexer from './base-lexer.js'\r\nimport cheerio from 'cheerio'\r\n\r\nexport default class HTMLLexer extends BaseLexer {\r\n  constructor(options = {}) {\r\n    super(options)\r\n\r\n    this.attr = options.attr || 'data-i18n'\r\n    this.optionAttr = options.optionAttr || 'data-i18n-options'\r\n  }\r\n\r\n  extract(content) {\r\n    const that = this\r\n    const $ = cheerio.load(content)\r\n    $(`[${that.attr}]`).each((index, node) => {\r\n      const $node = cheerio.load(node)\r\n\r\n      // the attribute can hold multiple keys\r\n      const keys = node.attribs[that.attr].split(';')\r\n      let options = node.attribs[that.optionAttr]\r\n\r\n      if (options) {\r\n        try {\r\n          options = JSON.parse(options)\r\n        } finally {\r\n        }\r\n      }\r\n\r\n      for (let key of keys) {\r\n        // remove any leading [] in the key\r\n        key = key.replace(/^\\[[a-zA-Z0-9_-]*\\]/, '')\r\n\r\n        // if empty grab innerHTML from regex\r\n        key = key || $node.text()\r\n\r\n        if (key) {\r\n          this.keys.push({ ...options, key })\r\n        }\r\n      }\r\n    })\r\n\r\n    return this.keys\r\n  }\r\n}\r\n"],"mappings":"o8GAAA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,OAAOC,OAAO,MAAM,SAAS;;AAERC,SAAS,0BAAAC,UAAA,GAAAC,SAAA,CAAAF,SAAA,EAAAC,UAAA,MAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAC5B,SAAAA,UAAA,EAA0B,KAAAK,KAAA,KAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC,CAAAG,eAAA,OAAAV,SAAA;IACtBK,KAAA,GAAAF,MAAA,CAAAQ,IAAA,OAAML,OAAO;;IAEbD,KAAA,CAAKO,IAAI,GAAGN,OAAO,CAACM,IAAI,IAAI,WAAW;IACvCP,KAAA,CAAKQ,UAAU,GAAGP,OAAO,CAACO,UAAU,IAAI,mBAAmB,QAAAR,KAAA;EAC7D,CAACS,YAAA,CAAAd,SAAA,KAAAe,GAAA,aAAAC,KAAA;;IAED,SAAAC,QAAQC,OAAO,EAAE,KAAAC,MAAA;MACf,IAAMC,IAAI,GAAG,IAAI;MACjB,IAAMC,CAAC,GAAGtB,OAAO,CAACuB,IAAI,CAACJ,OAAO,CAAC;MAC/BG,CAAC,KAAAE,MAAA,CAAKH,IAAI,CAACR,IAAI,MAAG,CAAC,CAACY,IAAI,CAAC,UAACC,KAAK,EAAEC,IAAI,EAAK;QACxC,IAAMC,KAAK,GAAG5B,OAAO,CAACuB,IAAI,CAACI,IAAI,CAAC;;QAEhC;QACA,IAAME,IAAI,GAAGF,IAAI,CAACG,OAAO,CAACT,IAAI,CAACR,IAAI,CAAC,CAACkB,KAAK,CAAC,GAAG,CAAC;QAC/C,IAAIxB,OAAO,GAAGoB,IAAI,CAACG,OAAO,CAACT,IAAI,CAACP,UAAU,CAAC;;QAE3C,IAAIP,OAAO,EAAE;UACX,IAAI;YACFA,OAAO,GAAGyB,IAAI,CAACC,KAAK,CAAC1B,OAAO,CAAC;UAC/B,CAAC,SAAS;UACV;QACF,CAAC,IAAA2B,SAAA,GAAAC,0BAAA;;YAEeN,IAAI,EAAAO,KAAA,MAApB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAsB,KAAbvB,GAAG,GAAAoB,KAAA,CAAAnB,KAAA;YACV;YACAD,GAAG,GAAGA,GAAG,CAACwB,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC;;YAE5C;YACAxB,GAAG,GAAGA,GAAG,IAAIY,KAAK,CAACa,IAAI,CAAC,CAAC;;YAEzB,IAAIzB,GAAG,EAAE;cACPI,MAAI,CAACS,IAAI,CAACa,IAAI,CAAAC,aAAA,CAAAA,aAAA,KAAMpC,OAAO,SAAES,GAAG,EAAHA,GAAG,GAAE,CAAC;YACrC;UACF,CAAC,SAAA4B,GAAA,GAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA,aAAAV,SAAA,CAAAY,CAAA;MACH,CAAC,CAAC;;MAEF,OAAO,IAAI,CAACjB,IAAI;IAClB,CAAC,YAAA5B,SAAA,GAvCoCF,SAAS,WAA3BE,SAAS,IAAA8C,OAAA"}